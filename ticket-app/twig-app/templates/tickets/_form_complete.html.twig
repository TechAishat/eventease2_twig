{% extends 'base.html.twig' %}

{% block title %}{{ title|default('Create Ticket') }} - TicketMaster{% endblock %}

{% block styles %}
{{ parent() }}
<style>
    .form-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 1rem;
    }
    
    .form-card {
        background: white;
        border-radius: 0.5rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        padding: 1.5rem;
    }
    
    .form-header {
        margin-bottom: 1.5rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #e5e7eb;
    }
    
    .form-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: #111827;
        margin: 0;
    }
    
    .form-group {
        margin-bottom: 1.5rem;
    }
    
    .form-label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 500;
        color: #374151;
    }
    
    .form-control {
        width: 100%;
        padding: 0.625rem;
        border: 1px solid #d1d5db;
        border-radius: 0.375rem;
        font-size: 0.875rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }
    
    .form-control:focus {
        border-color: #4f46e5;
        outline: none;
        box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
    }
    
    .form-select {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
        background-position: right 0.5rem center;
        background-repeat: no-repeat;
        background-size: 1.5em 1.5em;
        padding-right: 2.5rem;
        -webkit-print-color-adjust: exact;
        print-color-adjust: exact;
    }
    
    .btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.625rem 1.25rem;
        border-radius: 0.375rem;
        font-weight: 500;
        transition: all 0.15s ease-in-out;
        cursor: pointer;
    }
    
    .btn-primary {
        background-color: #4f46e5;
        color: white;
        border: 1px solid transparent;
    }
    
    .btn-primary:hover {
        background-color: #4338ca;
    }
    
    .btn-outline {
        background-color: transparent;
        border: 1px solid #d1d5db;
        color: #374151;
    }
    
    .btn-outline:hover {
        background-color: #f9fafb;
    }
    
    .form-actions {
        display: flex;
        justify-content: flex-end;
        gap: 1rem;
        margin-top: 2rem;
        padding-top: 1.5rem;
        border-top: 1px solid #e5e7eb;
    }
    
    .error-message {
        color: #dc2626;
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }
    
    .char-count {
        font-size: 0.75rem;
        color: #6b7280;
        text-align: right;
        margin-top: 0.25rem;
    }
    
    .char-limit {
        color: #dc2626;
        font-weight: 500;
    }
    
    .status-badge {
        display: inline-flex;
        align-items: center;
        padding: 0.25rem 0.75rem;
        border-radius: 9999px;
        font-size: 0.75rem;
        font-weight: 500;
        text-transform: capitalize;
    }
    
    .status-open { background-color: #dcfce7; color: #166534; }
    .status-in_progress { background-color: #fef3c7; color: #92400e; }
    .status-closed { background-color: #f3f4f6; color: #374151; }
    
    .priority-high { background-color: #fee2e2; color: #991b1b; }
    .priority-medium { background-color: #dbeafe; color: #1e40af; }
    .priority-low { background-color: #f3f4f6; color: #374151; }
    
    @media (max-width: 640px) {
        .form-container {
            padding: 0.5rem;
        }
        
        .form-card {
            padding: 1rem;
        }
        
        .form-actions {
            flex-direction: column;
        }
        
        .btn {
            width: 100%;
        }
    }
</style>
{% endblock %}

{% block content %}
<div class="form-container">
    <div class="form-card">
        <div class="form-header">
            <h1 class="form-title">{{ title|default('Create New Ticket') }}</h1>
            {% if ticket.id is defined %}
                <div class="flex items-center mt-2 space-x-2">
                    <span class="status-badge status-{{ ticket.status|default('open') }}">
                        {{ statuses[ticket.status]|default(ticket.status) }}
                    </span>
                    <span class="status-badge priority-{{ ticket.priority|default('medium') }}">
                        {{ priorities[ticket.priority]|default(ticket.priority|capitalize) }}
                    </span>
                </div>
            {% endif %}
        </div>
        
        <form id="ticketForm" action="{{ form_action }}" method="POST">
            {% if ticket.id is defined %}
                <input type="hidden" name="_method" value="PUT">
            {% endif %}
            
            <div class="form-group">
                <label for="title" class="form-label">Title <span class="text-red-500">*</span></label>
                <input type="text" id="title" name="title" required 
                       class="form-control" 
                       placeholder="Enter a brief title for your ticket"
                       value="{{ ticket.title ?? '' }}"
                       maxlength="255"
                       data-char-limit="255">
                <div class="flex justify-between">
                    <div id="title-error" class="error-message"></div>
                    <div class="char-count">
                        <span id="title-char-count">{{ (ticket.title ?? '')|length }}</span>/255
                    </div>
                </div>
            </div>
            
            <div class="form-group">
                <label for="description" class="form-label">Description <span class="text-red-500">*</span></label>
                <textarea id="description" name="description" required 
                          class="form-control" 
                          rows="5"
                          placeholder="Describe your issue in detail..."
                          data-char-limit="2000">{{ ticket.description ?? '' }}</textarea>
                <div class="flex justify-between">
                    <div id="description-error" class="error-message"></div>
                    <div class="char-count">
                        <span id="description-char-count">{{ (ticket.description ?? '')|length }}</span>/2000
                    </div>
                </div>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div class="form-group">
                    <label for="status" class="form-label">Status</label>
                    <select id="status" name="status" class="form-control form-select">
                        {% for value, label in statuses %}
                            <option value="{{ value }}" 
                                    {% if (ticket.status ?? 'open') == value %}selected{% endif %}>
                                {{ label }}
                            </option>
                        {% endfor %}
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="priority" class="form-label">Priority</label>
                    <select id="priority" name="priority" class="form-control form-select">
                        {% for value, label in priorities %}
                            <option value="{{ value }}" 
                                    {% if (ticket.priority ?? 'medium') == value %}selected{% endif %}>
                                {{ label }}
                            </option>
                        {% endfor %}
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="category" class="form-label">Category</label>
                    <select id="category" name="category" class="form-control form-select">
                        <option value="" {% if not (ticket.category is defined) %}selected{% endif %}>Select a category</option>
                        <option value="bug" {% if (ticket.category ?? '') == 'bug' %}selected{% endif %}>Bug</option>
                        <option value="feature" {% if (ticket.category ?? '') == 'feature' %}selected{% endif %}>Feature Request</option>
                        <option value="question" {% if (ticket.category ?? '') == 'question' %}selected{% endif %}>Question</option>
                        <option value="other" {% if (ticket.category ?? '') == 'other' %}selected{% endif %}>Other</option>
                    </select>
                </div>
                
                {% if users is defined and users|length > 0 %}
                <div class="form-group">
                    <label for="assigned_to" class="form-label">Assign To</label>
                    <select id="assigned_to" name="assigned_to" class="form-control form-select">
                        <option value="">Unassigned</option>
                        {% for user in users %}
                            <option value="{{ user.id }}" 
                                    {% if ticket.assigned_to is defined and ticket.assigned_to == user.id %}selected{% endif %}>
                                {{ user.name }} ({{ user.email }})
                            </option>
                        {% endfor %}
                    </select>
                </div>
                {% endif %}
            </div>
            
            <div class="form-group">
                <label for="due_date" class="form-label">Due Date (Optional)</label>
                <input type="date" id="due_date" name="due_date" 
                       class="form-control"
                       value="{{ ticket.due_date ?? '' }}"
                       min="{{ 'now'|date('Y-m-d') }}">
            </div>
            
            <div class="form-actions">
                <a href="{{ path('tickets') }}" class="btn btn-outline">
                    Cancel
                </a>
                <button type="submit" class="btn btn-primary">
                    {{ submit_button|default('Save Ticket') }}
                </button>
            </div>
        </form>
        
        {% if ticket.id is defined %}
        <div class="mt-8 pt-6 border-t border-gray-200">
            <h3 class="text-lg font-medium text-gray-900 mb-4">Danger Zone</h3>
            <div class="bg-red-50 p-4 rounded-md">
                <div class="flex justify-between items-center">
                    <div>
                        <h4 class="text-sm font-medium text-red-800">Delete this ticket</h4>
                        <p class="text-sm text-red-600">Once deleted, this ticket cannot be recovered.</p>
                    </div>
                    <form action="{{ path('tickets.destroy', {id: ticket.id}) }}" method="POST" class="inline-block" onsubmit="return confirm('Are you sure you want to delete this ticket? This action cannot be undone.');">
                        <input type="hidden" name="_method" value="DELETE">
                        <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                            <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                            </svg>
                            Delete Ticket
                        </button>
                    </form>
                </div>
            </div>
        </div>
        {% endif %}
    </div>
</div>
{% endblock %}

{% block scripts %}
{{ parent() }}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('ticketForm');
    const titleInput = document.getElementById('title');
    const descriptionInput = document.getElementById('description');
    const titleCharCount = document.getElementById('title-char-count');
    const descriptionCharCount = document.getElementById('description-char-count');
    
    // Character counter for title
    if (titleInput && titleCharCount) {
        updateCharCount(titleInput, titleCharCount);
        titleInput.addEventListener('input', () => updateCharCount(titleInput, titleCharCount));
    }
    
    // Character counter for description
    if (descriptionInput && descriptionCharCount) {
        updateCharCount(descriptionInput, descriptionCharCount);
        descriptionInput.addEventListener('input', () => updateCharCount(descriptionInput, descriptionCharCount));
    }
    
    // Form validation
    if (form) {
        form.addEventListener('submit', function(e) {
            let isValid = true;
            
            // Reset errors
            document.querySelectorAll('.error-message').forEach(el => el.textContent = '');
            
            // Validate title
            if (!titleInput.value.trim()) {
                document.getElementById('title-error').textContent = 'Title is required';
                isValid = false;
            }
            
            // Validate description
            if (!descriptionInput.value.trim()) {
                document.getElementById('description-error').textContent = 'Description is required';
                isValid = false;
            }
            
            if (!isValid) {
                e.preventDefault();
                // Scroll to first error
                const firstError = document.querySelector('.error-message:not(:empty)');
                if (firstError) {
                    firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
                }
            }
        });
    }
    
    // Helper function to update character count
    function updateCharCount(input, counterElement) {
        const maxLength = parseInt(input.getAttribute('maxlength') || input.getAttribute('data-char-limit') || '0');
        const currentLength = input.value.length;
        counterElement.textContent = currentLength;
        
        // Update counter color if approaching or exceeding limit
        if (currentLength > maxLength * 0.9) {
            counterElement.classList.add('text-red-600', 'font-semibold');
        } else {
            counterElement.classList.remove('text-red-600', 'font-semibold');
        }
    }
    
    // Initialize character counts on page load
    if (titleInput) updateCharCount(titleInput, titleCharCount);
    if (descriptionInput) updateCharCount(descriptionInput, descriptionCharCount);
});
</script>
{% endblock %}
